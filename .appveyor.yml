clone_folder: c:\gopath\src\github.com\danstis\Plex-Sync

environment:
  GOPATH: c:\gopath
  CODACY_TOKEN:
    secure: yrLZn0Ij30M2DLejKY+7ulU3d86KrrOxl/+vaBXmFPCPotquPtTWyRWUE7yIhez3
  COVERALLS_TOKEN:
    secure: Bc2t/iVXULjddywzFj+F5RrWTlqVHVv4ikA+NV9LZMt69OQRaauWcMDhpjlZ5FN/

install:
  - choco install gitversion.portable -pre -y
  - set PATH=%GOPATH%\bin;c:\go\bin;%PATH%
  - echo %GOPATH%
  - go version
  - go get -v -t -d .\...

before_build:
  - gitversion /l console /output buildserver

build_script:
  - ps: go build -race -ldflags "-X github.com/danstis/Plex-Sync/plex.Version=$env:GitVersion_SemVer" main.go

before_test:
  - go get -u github.com/haya14busa/goverage
  - go get -u github.com/schrej/godacov
  - go get -u github.com/mattn/goveralls

test_script:
  - goverage -v .\...
  - go tool cover -func coverage.out

after_test:
  - dir *.out
  - echo %APPVEYOR_REPO_COMMIT%
  - godacov -t %CODACY_TOKEN% -r .\coverage.out -c %APPVEYOR_REPO_COMMIT% || exit 0
  - goveralls -coverprofile=coverage.out -service=appveyor || exit 0
  - ps: Move-Item ./config/config.toml.default ./config/config.toml
  - ps: Move-Item ./config/tvshows.txt.default ./config/tvshows.txt
  - ps: Get-ChildItem -Directory -Include ".*","plex","Plex-Sync" -Recurse -Force | Move-Item -Destination $env:Temp -Force
  - ps: Get-ChildItem -Include "coverage.out",".*","*.go","_template.html" -Recurse -Force | Move-Item -Destination $env:Temp -Force
  - 7z a Plex-Sync.zip %APPVEYOR_BUILD_FOLDER%
  - ps: dir -Recurse

artifacts:
  - path: Plex-Sync.zip
    name: Plex-Sync

deploy:
  release: v$(GitVersion_SemVer)
  description: 'Release notes TBA'
  provider: GitHub
  auth_token:
    secure: Yl/4x5Z5ys7ZvWZayu3S2Sh6rj5GMF/IKtXeuYIlfjdojJJC5sp3S8s35Dnzdcca # GitHub Token
  artifact: Plex-Sync
  draft: true
  prerelease: false
  on:
    appveyor_repo_tag: true        # deploy on tag push only
